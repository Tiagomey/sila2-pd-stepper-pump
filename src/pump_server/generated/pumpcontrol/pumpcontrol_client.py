# Generated by sila2.code_generator; sila2.__version__: 0.12.2
# -----
# This class does not do anything useful at runtime. Its only purpose is to provide type annotations.
# Since sphinx does not support .pyi files (yet?), this is a .py file.
# -----

from __future__ import annotations

from typing import TYPE_CHECKING

if TYPE_CHECKING:

    from typing import Iterable, Optional

    from pumpcontrol_types import (
        Direction_Responses,
        InitPump_Responses,
        Pump_Responses,
        StartPump_Responses,
        StopPump_Responses,
        Suck_Responses,
    )
    from sila2.client import ClientMetadataInstance, ClientObservableProperty


class PumpControlClient:
    """
    Feature to control a pump via SiLA 2.
    """

    PumpStatus: ClientObservableProperty[str]
    """
    Current status of the pump.
    """

    def InitPump(
        self, ComPort: str, *, metadata: Optional[Iterable[ClientMetadataInstance]] = None
    ) -> InitPump_Responses:
        """
        Initialize the pump before usage.
        """
        ...

    def StartPump(
        self, Start: bool, *, metadata: Optional[Iterable[ClientMetadataInstance]] = None
    ) -> StartPump_Responses:
        """
        Start the pump operation.
        """
        ...

    def StopPump(
        self, Stop: bool, *, metadata: Optional[Iterable[ClientMetadataInstance]] = None
    ) -> StopPump_Responses:
        """
        Stop the pump operation.
        """
        ...

    def Suck(self, Amount: float, *, metadata: Optional[Iterable[ClientMetadataInstance]] = None) -> Suck_Responses:
        """
        Suck liquid in ml.
        """
        ...

    def Pump(self, Amount: float, *, metadata: Optional[Iterable[ClientMetadataInstance]] = None) -> Pump_Responses:
        """
        Pump liquid in ml.
        """
        ...

    def Direction(
        self, Direction: bool, *, metadata: Optional[Iterable[ClientMetadataInstance]] = None
    ) -> Direction_Responses:
        """
        Set pump direction: Forward or Backward.
        """
        ...
